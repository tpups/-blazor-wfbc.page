@page "/commish/managers"
@attribute [Authorize(Policy = Policies.IsCommish)]
@inherits ManagersModel
@using WFBC.Client.Shared.Components.Buttons;


<div class="flex flex-col m-3 lg:m-6 max-w-full">
    <div class="flex p-4 mb-2 border rounded-xl shadow-sm">
        <Button Text="Add Manager" Href="/commish/add_manager" Role="button" AriaLabel="add manager link" />
   </div>

    <div class="p-6 border rounded-xl shadow-sm">
        <div class="-m-1.5 overflow-x-auto">
            <div class="p-1.5 min-w-full inline-block align-middle">
                <div class="overflow-hidden">
                    <table class="table-auto min-w-full divide-y divide-wfbc-blue-2">
                        <thead>
                            <tr>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-wfbc-black-1 uppercase">Name</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-wfbc-black-1 uppercase">Team</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-wfbc-black-1 uppercase">Email</th>
                                <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-wfbc-black-1 uppercase">Options</th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-wfbc-blue-2">
                            @foreach (var man in manList)
                            {
                                <tr>
                                    <td class="p-2 md:p-4 text-sm md:text-md">@man.FirstName</td>
                                    <td class="p-2 md:p-4 text-sm md:text-md whitespace-nowrap">@man.TeamName</td>
                                    <td class="p-2 md:p-4 text-sm md:text-md">@man.Email</td>
                                    <td class="p-2 md:p-4 text-sm md:text-md flex">
                                        <Button Text="Edit" Href=@("/commish/edit_manager/" + @man.Id) AriaLabel="edit manager link" />
                                        <a @onclick:preventDefault @onclick='() => OpenModal("delete", man.Id)' data-modal-target="delete-manager-modal" data-modal-toggle="delete-manager-modal" class="mx-2 px-4 py-2 rounded-full bg-wfbc-blue-2 text-wfbc-white-1" href="#" aria-label="open modal">Delete</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

</div>

<Modal ModalId="delete-manager-modal" Hidden="@Hidden" CloseModal="@CloseModal">
    <h3 class="mb-5 text-lg font-normal text-wfbc-black-1">Are you sure you want to delete this manager?</h3>
    <h3 class="mb-5 text-lg font-normal text-wfbc-black-1">@($"name: {man.FirstName} {man.LastName}")</h3>
    <h3 class="mb-5 text-lg font-normal text-wfbc-black-1">@($"team: { man.TeamName}")</h3>    
    <button @onclick="async () => await Delete(man.Id)" data-modal-hide="popup-modal" type="button" class="text-wfbc-black-1 bg-wfbc-white-1 hover:bg-wfbc-red-1 hover:text-wfbc-white-1 focus:ring-4 focus:outline-none focus:ring-wfbc-red-1 font-medium rounded-lg border text-sm inline-flex items-center px-5 py-2.5 text-center mr-2">
        Yes, I'm sure
    </button>
    <button @onclick=CloseModal ata-modal-hide="delete-manager-modal" type="button" class="text-wfbc-black-1 bg-wfbc-white-1 hover:bg-wfbc-blue-1 hover:text-wfbc-white-1 focus:ring-4 focus:outline-none focus:ring-wfbc-red-1 rounded-lg border text-sm font-medium px-5 py-2.5  focus:z-10">No, cancel</button>
</Modal>


@code {
    public string Hidden { get; set; }

    protected override void OnInitialized()
    {
        Hidden = "hidden";
    }

    public void OpenModal(string modalType, string manId)
    {
        Hidden = "";
        if (modalType == "delete")
        {
            DeleteConfirm(manId);
        }
    }
    public void CloseModal()
    {
        Hidden = "hidden";
    }
    public async Task Delete(string id)
    {
        await DeleteManager(id);
        CloseModal();
    }
}
