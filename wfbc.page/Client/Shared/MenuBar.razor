@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using WFBC.Client.Shared.SVG
@inject AppState AppState
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<div class="menu-bar">
    <button class="drawer-control" @onclick="ToggleDrawer" aria-label="Drawer Toggle">
        <svg class="ham ham-rotate ham8 @AppState.DrawerActive toggler-icon" viewBox="0 0 100 100" width="42">
            <OpenCloseDrawer />
        </svg>
    </button>
    <button class="drawer-control" @onclick="MinifyDrawer" aria-label="Drawer Minified Toggle">
        <svg class="arrow arrow-rotate @AppState.Minified toggler-icon" viewBox="0 0 100 100" width="42">
            <MinifyDrawer />
        </svg>
    </button>
    <Tooltip Text="Rotowire League">
        <button id="rotowire-button" class="top-menu-button">
            <RotowireLink />
        </button>
    </Tooltip>
    <Tooltip Text="Slack Channel">
        <button id="slack-button" class="top-menu-button">
              <SlackLink />
        </button>
    </Tooltip>
    <Tooltip Text="Manager Menu">
        <button id="manager-button" class="top-menu-button @AppState.ManagerMenuCssClass" @onclick="ToggleManagerMenu" aria-label="Manager Menu Toggle">
             <ManagerMenu />
        </button>
    </Tooltip>
    <div class="drop-menu @AppState.ManagerMenuCssClass">
        <ul class="drop-menu--drop manager-menu">
            <AuthorizeView>
                <Authorized>
                    <li class="drop-item drop-menu--item-1"><a href="#">Profile</a></li>
                    <li class="drop-item drop-menu--item-2"><a href="#">Notifications</a></li>
                    <li class="drop-item drop-menu--item-3"><a href="#" @onclick="BeginSignOut">Sign Out</a></li>
                </Authorized>
                <NotAuthorized>
                    <li class="drop-item drop-menu--item-1"><a href="authentication/login">Sign In</a></li>
                </NotAuthorized>
            </AuthorizeView>
        </ul>
    </div>
</div>

@code {
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
    void ToggleDrawer()
    {
        AppState.SetCloseDrawer(toggle: true);
    }
    void MinifyDrawer()
    {
        AppState.SetMinifyDrawer(toggle: true);
    }
    void ToggleManagerMenu()
    {
        AppState.SetOpenManagerMenu(toggle: true);
    }
    protected override void OnInitialized()
    {
        AppState.OnChange += StateHasChanged;
    }
    public void Dispose()
    {
        AppState.OnChange -= StateHasChanged;
    }
}
